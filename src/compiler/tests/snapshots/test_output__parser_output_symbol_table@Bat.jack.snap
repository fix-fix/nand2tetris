---
source: src/compiler/tests/test_output.rs
expression: result_xml
input_file: src/compiler/tests/inputs/11/Pong/Bat.jack
---
<class>
  <keyword> class </keyword>
  <identifier> Bat </identifier>
  <symbol> { </symbol>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier>
      <identifierName> x </identifierName>
      <identifierCategory> field </identifierCategory>
      <identifierIndex> 0 </identifierIndex>
      <identifierIsUsed> false </identifierIsUsed>
    </identifier>
    <symbol> , </symbol>
    <identifier>
      <identifierName> y </identifierName>
      <identifierCategory> field </identifierCategory>
      <identifierIndex> 1 </identifierIndex>
      <identifierIsUsed> false </identifierIsUsed>
    </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier>
      <identifierName> width </identifierName>
      <identifierCategory> field </identifierCategory>
      <identifierIndex> 2 </identifierIndex>
      <identifierIsUsed> false </identifierIsUsed>
    </identifier>
    <symbol> , </symbol>
    <identifier>
      <identifierName> height </identifierName>
      <identifierCategory> field </identifierCategory>
      <identifierIndex> 3 </identifierIndex>
      <identifierIsUsed> false </identifierIsUsed>
    </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <classVarDec>
    <keyword> field </keyword>
    <keyword> int </keyword>
    <identifier>
      <identifierName> direction </identifierName>
      <identifierCategory> field </identifierCategory>
      <identifierIndex> 4 </identifierIndex>
      <identifierIsUsed> false </identifierIsUsed>
    </identifier>
    <symbol> ; </symbol>
  </classVarDec>
  <subroutineDec>
    <keyword> constructor </keyword>
    <identifier> Bat </identifier>
    <identifier> new </identifier>
    <symbol> ( </symbol>
    <parameterList>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Ax </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 0 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
      <symbol> , </symbol>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Ay </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 1 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
      <symbol> , </symbol>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Awidth </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 2 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
      <symbol> , </symbol>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Aheight </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 3 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> x </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 0 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Ax </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> y </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 1 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Ay </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 1 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> width </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 2 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Awidth </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 2 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> height </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 3 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Aheight </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 3 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> direction </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 4 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <integerConstant> 2 </integerConstant>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier> show </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <expression>
            <term>
              <keyword> this </keyword>
            </term>
          </expression>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> dispose </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier> Memory </identifier>
          <symbol> . </symbol>
          <identifier> deAlloc </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> this </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> show </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier> Screen </identifier>
          <symbol> . </symbol>
          <identifier> setColor </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> true </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier> draw </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> hide </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier> Screen </identifier>
          <symbol> . </symbol>
          <identifier> setColor </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <keyword> false </keyword>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier> draw </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> draw </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier> Screen </identifier>
          <symbol> . </symbol>
          <identifier> drawRectangle </identifier>
          <symbol> ( </symbol>
          <expressionList>
            <expression>
              <term>
                <identifier>
                  <identifierName> x </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 0 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier>
                  <identifierName> y </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 1 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier>
                  <identifierName> x </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 0 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier>
                  <identifierName> width </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 2 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
            </expression>
            <symbol> , </symbol>
            <expression>
              <term>
                <identifier>
                  <identifierName> y </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 1 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <identifier>
                  <identifierName> height </identifierName>
                  <identifierCategory> field </identifierCategory>
                  <identifierIndex> 3 </identifierIndex>
                  <identifierIsUsed> true </identifierIsUsed>
                </identifier>
              </term>
            </expression>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> setDirection </identifier>
    <symbol> ( </symbol>
    <parameterList>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Adirection </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 0 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> direction </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 4 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Adirection </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> int </keyword>
    <identifier> getLeft </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <returnStatement>
          <keyword> return </keyword>
          <expression>
            <term>
              <identifier>
                <identifierName> x </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> int </keyword>
    <identifier> getRight </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <returnStatement>
          <keyword> return </keyword>
          <expression>
            <term>
              <identifier>
                <identifierName> x </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
            <symbol> + </symbol>
            <term>
              <identifier>
                <identifierName> width </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 2 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> setWidth </identifier>
    <symbol> ( </symbol>
    <parameterList>
      <keyword> int </keyword>
      <identifier>
        <identifierName> Awidth </identifierName>
        <identifierCategory> argument </identifierCategory>
        <identifierIndex> 0 </identifierIndex>
        <identifierIsUsed> false </identifierIsUsed>
      </identifier>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <doStatement>
          <keyword> do </keyword>
          <identifier> hide </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <letStatement>
          <keyword> let </keyword>
          <identifier>
            <identifierName> width </identifierName>
            <identifierCategory> field </identifierCategory>
            <identifierIndex> 2 </identifierIndex>
            <identifierIsUsed> true </identifierIsUsed>
          </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> Awidth </identifierName>
                <identifierCategory> argument </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
          </expression>
          <symbol> ; </symbol>
        </letStatement>
        <doStatement>
          <keyword> do </keyword>
          <identifier> show </identifier>
          <symbol> ( </symbol>
          <expressionList>
          </expressionList>
          <symbol> ) </symbol>
          <symbol> ; </symbol>
        </doStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword> method </keyword>
    <keyword> void </keyword>
    <identifier> move </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <statements>
        <ifStatement>
          <keyword> if </keyword>
          <symbol> ( </symbol>
          <expression>
            <term>
              <identifier>
                <identifierName> direction </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 4 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
            </term>
            <symbol> = </symbol>
            <term>
              <integerConstant> 1 </integerConstant>
            </term>
          </expression>
          <symbol> ) </symbol>
          <symbol> { </symbol>
          <statements>
            <letStatement>
              <keyword> let </keyword>
              <identifier>
                <identifierName> x </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier>
                    <identifierName> x </identifierName>
                    <identifierCategory> field </identifierCategory>
                    <identifierIndex> 0 </identifierIndex>
                    <identifierIsUsed> true </identifierIsUsed>
                  </identifier>
                </term>
                <symbol> - </symbol>
                <term>
                  <integerConstant> 4 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <ifStatement>
              <keyword> if </keyword>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <identifier>
                    <identifierName> x </identifierName>
                    <identifierCategory> field </identifierCategory>
                    <identifierIndex> 0 </identifierIndex>
                    <identifierIsUsed> true </identifierIsUsed>
                  </identifier>
                </term>
                <symbol> &lt; </symbol>
                <term>
                  <integerConstant> 0 </integerConstant>
                </term>
              </expression>
              <symbol> ) </symbol>
              <symbol> { </symbol>
              <statements>
                <letStatement>
                  <keyword> let </keyword>
                  <identifier>
                    <identifierName> x </identifierName>
                    <identifierCategory> field </identifierCategory>
                    <identifierIndex> 0 </identifierIndex>
                    <identifierIsUsed> true </identifierIsUsed>
                  </identifier>
                  <symbol> = </symbol>
                  <expression>
                    <term>
                      <integerConstant> 0 </integerConstant>
                    </term>
                  </expression>
                  <symbol> ; </symbol>
                </letStatement>
              </statements>
              <symbol> } </symbol>
            </ifStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier>
                          <identifierName> x </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 0 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier>
                          <identifierName> width </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 2 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier>
                          <identifierName> x </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 0 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier>
                          <identifierName> width </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 2 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 4 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier>
                      <identifierName> height </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 3 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> x </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 0 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> x </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 0 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <integerConstant> 3 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier>
                      <identifierName> height </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 3 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
          <keyword> else </keyword>
          <symbol> { </symbol>
          <statements>
            <letStatement>
              <keyword> let </keyword>
              <identifier>
                <identifierName> x </identifierName>
                <identifierCategory> field </identifierCategory>
                <identifierIndex> 0 </identifierIndex>
                <identifierIsUsed> true </identifierIsUsed>
              </identifier>
              <symbol> = </symbol>
              <expression>
                <term>
                  <identifier>
                    <identifierName> x </identifierName>
                    <identifierCategory> field </identifierCategory>
                    <identifierIndex> 0 </identifierIndex>
                    <identifierIsUsed> true </identifierIsUsed>
                  </identifier>
                </term>
                <symbol> + </symbol>
                <term>
                  <integerConstant> 4 </integerConstant>
                </term>
              </expression>
              <symbol> ; </symbol>
            </letStatement>
            <ifStatement>
              <keyword> if </keyword>
              <symbol> ( </symbol>
              <expression>
                <term>
                  <symbol> ( </symbol>
                  <expression>
                    <term>
                      <identifier>
                        <identifierName> x </identifierName>
                        <identifierCategory> field </identifierCategory>
                        <identifierIndex> 0 </identifierIndex>
                        <identifierIsUsed> true </identifierIsUsed>
                      </identifier>
                    </term>
                    <symbol> + </symbol>
                    <term>
                      <identifier>
                        <identifierName> width </identifierName>
                        <identifierCategory> field </identifierCategory>
                        <identifierIndex> 2 </identifierIndex>
                        <identifierIsUsed> true </identifierIsUsed>
                      </identifier>
                    </term>
                  </expression>
                  <symbol> ) </symbol>
                </term>
                <symbol> &gt; </symbol>
                <term>
                  <integerConstant> 511 </integerConstant>
                </term>
              </expression>
              <symbol> ) </symbol>
              <symbol> { </symbol>
              <statements>
                <letStatement>
                  <keyword> let </keyword>
                  <identifier>
                    <identifierName> x </identifierName>
                    <identifierCategory> field </identifierCategory>
                    <identifierIndex> 0 </identifierIndex>
                    <identifierIsUsed> true </identifierIsUsed>
                  </identifier>
                  <symbol> = </symbol>
                  <expression>
                    <term>
                      <integerConstant> 511 </integerConstant>
                    </term>
                    <symbol> - </symbol>
                    <term>
                      <identifier>
                        <identifierName> width </identifierName>
                        <identifierCategory> field </identifierCategory>
                        <identifierIndex> 2 </identifierIndex>
                        <identifierIsUsed> true </identifierIsUsed>
                      </identifier>
                    </term>
                  </expression>
                  <symbol> ; </symbol>
                </letStatement>
              </statements>
              <symbol> } </symbol>
            </ifStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> false </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> x </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 0 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 4 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> x </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 0 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 1 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier>
                      <identifierName> height </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 3 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> setColor </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword> true </keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
            <doStatement>
              <keyword> do </keyword>
              <identifier> Screen </identifier>
              <symbol> . </symbol>
              <identifier> drawRectangle </identifier>
              <symbol> ( </symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier>
                          <identifierName> x </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 0 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                      <symbol> + </symbol>
                      <term>
                        <identifier>
                          <identifierName> width </identifierName>
                          <identifierCategory> field </identifierCategory>
                          <identifierIndex> 2 </identifierIndex>
                          <identifierIsUsed> true </identifierIsUsed>
                        </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                  <symbol> - </symbol>
                  <term>
                    <integerConstant> 3 </integerConstant>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> x </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 0 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier>
                      <identifierName> width </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 2 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
                <symbol> , </symbol>
                <expression>
                  <term>
                    <identifier>
                      <identifierName> y </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 1 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier>
                      <identifierName> height </identifierName>
                      <identifierCategory> field </identifierCategory>
                      <identifierIndex> 3 </identifierIndex>
                      <identifierIsUsed> true </identifierIsUsed>
                    </identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol> ) </symbol>
              <symbol> ; </symbol>
            </doStatement>
          </statements>
          <symbol> } </symbol>
        </ifStatement>
        <returnStatement>
          <keyword> return </keyword>
          <symbol> ; </symbol>
        </returnStatement>
      </statements>
      <symbol> } </symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol> } </symbol>
</class>

